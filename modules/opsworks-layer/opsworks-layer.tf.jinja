module "{{ data["module_config"]["name"] }}" {
  source = "git@github.com:EdisonJunior/terraform-infra//modules/opsworks-layer"

  name       = "{{ data["global_config"]["layer_prefix"] }}-{{ data["module_config"]["name"] }}"
  stack_id   = "${module.opsworks_stack.stack_id}"
  stack_name = "${module.opsworks_stack.stack_name}"

  # ASG
  min_size             = {{ data["module_config"]["min_instance_count"] }}
  max_size             = {{ data["module_config"]["max_instance_count"] }}
  subnets              = "${module.vpc.subnets.public.ids}"
  iam_instance_profile = "${module.opsworks_stack.default_instance_profile}"
  instance_type        = "{{ data["module_config"]["instance_type"] }}"
  key_name             = "devops-debug"                                      # TODO REMOVE BEFORE DEPLOY TO PROD

  image_id = "{{ data["module_config"]["image_id"] }}"

  # Layer
  short_name = "${format("%s-%s", "{{ data["module_config"]["name"] }}", "{{ data["global_config"]["version"] }}" )}"

  security_groups = [
    "${module.vpc.aws_security_group.allow_all_within_vpc.id}",
  ]

  assign_public_ips = {{ "true" if data["module_config"]["elb"]["internet_facing"] else "false" }}
  use_ebs           = {{ "true" if "ebs_volume_size" in layer else "false" }}

  custom_setup_recipes     = "${local.custom_setup_recipes}"
  custom_configure_recipes = "${local.custom_configure_recipes}"
  custom_deploy_recipes    = "${local.custom_deploy_recipes}"
  custom_shutdown_recipes  = "${local.custom_shutdown_recipes}"

  custom_json = <<EOF
{
  "{{ data["global_config"]["name"] }}": {
    "deploy": {
      "branch": "master"
    },
    "nginx": {
      "server_name": "{{ data["module_config"]["name"] }}.{{ data["global_config"]["environment"] }}.ring.net",
      "redis_server": "${module.{{ data["module_config"]["name"]}}-redis.redis_endpoint}",
      "consul_host":  "consul.{{ data["global_config"]["environment"] }}",
      "socket_service": "{{ data["module_config"]["name"] }}"
    }
  },
  "ring-data-mgmt": {
    "logstash-agent": {
      "logs_tag": "{{ data["module_config"]["name"] }}-socket-service",
      "logs_path": "/var/log/nginx/error.log"
    },
    "filebeat-agent": {
      "tags": ["{{ data["module_config"]["name"] }}-socket-service"]
    }
  },
  "ring-devops": {
    "cronjobs": [
      "0 */2 * * * root /usr/sbin/logrotate /etc/logrotate.conf"
    ],
    "tag_instance_with": {
      "Env": "{{ data["global_config"]["environment"] }}",
      "Roles": "app,{{ data["module_config"]["name"] }}",
      "Project": "{{ data["global_config"]["name"] }}"
    },
    "datadog": {
      "api_key": "${trimspace(data.aws_ssm_parameter.datadog_api_key.value)}",
      "dogstreams": "/var/log/nginx/datadog.log"
    }
  }
}
EOF
}
